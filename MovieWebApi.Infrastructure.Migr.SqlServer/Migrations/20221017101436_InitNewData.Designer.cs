// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieWebApi.Infrastructure.Data;

#nullable disable

namespace MovieWebApi.Infrastructure.Migr.SqlServer.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20221017101436_InitNewData")]
    partial class InitNewData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MovieStarring", b =>
                {
                    b.Property<Guid>("MoviesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StarringsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MoviesId", "StarringsId");

                    b.HasIndex("StarringsId");

                    b.ToTable("MovieStarring");
                });

            modelBuilder.Entity("MovieWebApi.Domain.Core.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MovieId");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Movie");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01abbca8-664d-4b20-b5de-024705497d4a"),
                            Description = "This is film was made by Quentin Tarantino",
                            Name = "Pulp Fiction"
                        },
                        new
                        {
                            Id = new Guid("02abbca8-664d-4b20-b5de-024705497d4a"),
                            Description = "This is film was made by Guy Ritchie",
                            Name = "Snatch",
                            Rating = 3.0
                        });
                });

            modelBuilder.Entity("MovieWebApi.Domain.Core.Entities.MovieStarring", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StarringId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("StarringId");

                    b.ToTable("MovieStarrings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb1cced4-6fa8-463c-b03c-3d82ec10ce35"),
                            MovieId = new Guid("01abbca8-664d-4b20-b5de-024705497d4a"),
                            StarringId = new Guid("11abbca8-664d-4b20-b5de-024705497d4a")
                        },
                        new
                        {
                            Id = new Guid("fa40dd43-0867-49aa-95f8-42c04406942f"),
                            MovieId = new Guid("02abbca8-664d-4b20-b5de-024705497d4a"),
                            StarringId = new Guid("12abbca8-664d-4b20-b5de-024705497d4a")
                        },
                        new
                        {
                            Id = new Guid("161b89eb-4dde-474b-894c-75be72212e86"),
                            MovieId = new Guid("02abbca8-664d-4b20-b5de-024705497d4a"),
                            StarringId = new Guid("11abbca8-664d-4b20-b5de-024705497d4a")
                        },
                        new
                        {
                            Id = new Guid("9bc7c0a4-eb40-4c72-8969-0e5442a20cce"),
                            MovieId = new Guid("01abbca8-664d-4b20-b5de-024705497d4a"),
                            StarringId = new Guid("12abbca8-664d-4b20-b5de-024705497d4a")
                        });
                });

            modelBuilder.Entity("MovieWebApi.Domain.Core.Entities.Starring", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StarringId");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Starring");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11abbca8-664d-4b20-b5de-024705497d4a"),
                            Description = "One of the main character",
                            FirstName = "John",
                            SecondName = "Travolta"
                        },
                        new
                        {
                            Id = new Guid("12abbca8-664d-4b20-b5de-024705497d4a"),
                            Description = "One of the main character",
                            FirstName = "Samuel L.",
                            SecondName = "Jackson"
                        });
                });

            modelBuilder.Entity("MovieStarring", b =>
                {
                    b.HasOne("MovieWebApi.Domain.Core.Entities.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieWebApi.Domain.Core.Entities.Starring", null)
                        .WithMany()
                        .HasForeignKey("StarringsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieWebApi.Domain.Core.Entities.MovieStarring", b =>
                {
                    b.HasOne("MovieWebApi.Domain.Core.Entities.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieWebApi.Domain.Core.Entities.Starring", "Starring")
                        .WithMany()
                        .HasForeignKey("StarringId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Starring");
                });
#pragma warning restore 612, 618
        }
    }
}
